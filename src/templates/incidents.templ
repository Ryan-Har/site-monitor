package templates

import(
    "github.com/Ryan-Har/site-monitor/src/templates/partials"
    "github.com/Ryan-Har/site-monitor/src/internal/database"
    "github.com/Ryan-Har/site-monitor/src/models"
    "fmt"
    "time"
)

templ Incidents(userInfo models.UserInfo, incInfo ...database.IncidentWithMonitor) {
     <div class="container-fluid">
        <div class="row flex-nowrap">
            @partials.SideBar(userInfo)
            <div class="col py-3 offset-2 offset-sm-3 offset-xl-2">
                @incidentTitle()
                @incidentTable(incInfo...)
            </div>
        </div>
    </div>
}

templ incidentTitle() {
    <div class="row my-2 mx-3">
        <div class="col">
            <h4>Incidents</h4>
        </div>
    </div>
}

templ incidentTable(incInfo ...database.IncidentWithMonitor) {
    <div class="row my-2 mx-3">
        if len(incInfo) < 1 {
            <h5>No incidents to show</h5>       
        } else {
            <table class="table table-striped">
            <thead>
                <tr>
                <th scope="col">Status</th>
                <th scope="col">Monitor</th>
                <th scope="col">Started</th>
                <th scope="col">Duration</th>
                </tr>
            </thead>
            <tbody>
            for _, inc := range incInfo {
                <tr>
                <td>
                if inc.EndTime.Valid {
                    <div style="color:green;"> Resolved </div>
                } else {
                    <div style="color:red;"> Ongoing </div>
                }
                </td>
                <td>
                    { fmt.Sprintf("%s: %s", inc.URL, inc.Type) }
                </td>
                <td>
                    { time.Unix(int64(inc.StartTime), 0).Format("2006-01-02 15:04:05") }
                </td>
                <td>
                    if inc.EndTime.Valid {
			           { partials.FormatDuration(time.Unix(inc.EndTime.Int64, 0).Sub(time.Unix(int64(inc.StartTime), 0))) }
		            } else {
                        { partials.FormatDuration(time.Now().Sub(time.Unix(int64(inc.StartTime), 0))) }
                    }
                </td>
                </tr>
            }
            </tbody>
        </table>
        }
    </div>

}

