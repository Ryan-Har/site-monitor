package partials

// SettingsNavBar is a partial that renders a navigation bar for the settings page
// activeItem is the name of the active item in the navigation bar
templ SettingsNavBar(activeItem string) {
    <ul class="nav nav-tabs flex-nowrap overflow-x-auto overflow-y-hidden">
        <li class="nav-item">
            if activeItem == "account" {
                <a class="nav-link active" aria-current="page" href="/settings/account">Account</a>
            } else {
                <a class="nav-link" href="/settings/account">Account</a>
            }
        </li>
        <li class="nav-item">
            if activeItem == "notifications" {
                <a class="nav-link active" aria-current="page" href="/settings/notifications">Notifications</a>
            } else {
                <a class="nav-link" href="/settings/notifications">Notifications</a>
            }
        </li>
        <li class="nav-item">
            if activeItem == "security" {
                <a class="nav-link active" aria-current="page" href="/settings/security">Security</a>
            } else {
                <a class="nav-link" href="/settings/security">Security</a>
            }
        </li>
    </ul>
}

templ ChangeFullNameCard(currentName string) {
    <div class="container-md">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Change Name</h5>
                <hr></hr>
                <form id="changeDisplayNameForm">
                    <div class="mb-3">
                        <label for="fullName" class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="fullName" name="fullName" value={ currentName } required></input>
                    </div>
                    <p id="changeDisplayNameNotification"></p>
                    <div class="text-end">
                        <button type="submit" class="btn btn-primary">Change Name</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

templ ChangePasswordCard() {
    <div class="container-md">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Change Password</h5>
                <hr></hr>
                <form id="changePasswordForm">
                    <div class="mb-3">
                        <label for="currentPassword" class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="currentPassword" name="currentPassword" required></input>
                    </div>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">Password</label>
                        <input type="password" class="form-control" id="newPassword" name="newPassword" required></input>
                    </div>
                    <div class="mb-3">
                        <label for="repeatNewPassword" class="form-label">Repeat Password</label>
                        <input type="password" class="form-control" id="repeatNewPassword" name="repeatNewPassword" required></input>
                    </div>
                    <p id="passwordNotification"></p>
                    <div class="text-end">
                        <button type="submit" class="btn btn-primary">Change Password</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

templ ToggleThemeCard() {
    <div class="container-md">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Dark Mode</h5>
                <hr></hr>
                <div class="row">
                    <div class="col-auto">
                        Toggle dark mode on or off
                    </div>
                    <div class="col text-end">
                        <button type="button" class="btn btn-primary" onclick="toggleTheme()">Toggle Theme</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

templ AddNotificationMethod() {
    <div class="container-md">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Add New notification Method</h5>
                <hr></hr>
                <div class="row">
                    <form action="/notifications/new" method="post" hx-boost="true" hx-target="#formContent" id="addNotificationForm">
                        <div class="my-2">
                            <label for="typeSelection" class="form-label">Notification Type</label>
                            <select class="form-select" id="typeSelection" name="typeSelection" hx-get="/settings/getNotificationFormInfo" hx-trigger="change">
                                <option hidden disabled selected value> -- select an option -- </option>
                                <option value="discord">Discord Webhook</option>
                                <option value="slack">Slack Webhook</option>
                                <option value="email">Email</option>
                            </select>
                        </div>
                        <div id="formContent">
                        </div>
                        <hr></hr>
                        <p id="testMessageResponse"></p>
                        <div class="row">
                            <div class="col">
                                <button class="btn btn-primary" id="formTestButton" style="display: none;" hx-post="/notifications/sendtest" hx-target="#testMessageResponse">Send Test</button>
                            </div>
                            <div class="col text-end">
                                <button class="btn btn-primary" id="formSubmitButton" type="submit">Submit</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

templ NotificationFormContentWebhook() {
    <hr>
    <label for="additionalInfo" class="form-label">Webhook endpoint</label>
    <input type="text" class="form-control" id="additionalInfo" name="additionalInfo" required placeholder="https://my/webhook/endpoint"></input>
    @ShowNotificationTestButton()
}

templ NotificationFormContentEmail() {
    <hr>
    <label for="additionalInfo" class="form-label">Email address</label>
    <input type="email" class="form-control" id="additionalInfo" name="additionalInfo" required placeholder="example@example.com"></input>
    @ShowNotificationTestButton()
}

templ ShowNotificationTestButton() {
    <script>
        const formButton = document.getElementById('formTestButton');
        formButton.style.display = "block";
    </script>
}