package partials

import (
  "github.com/Ryan-Har/site-monitor/src/config"
  // "encoding/json"
	"fmt"
  "html/template"
)

templ ImportFirebaseScripts() {
    <!-- Firebase App (the core Firebase SDK) -->
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <!-- Firebase Authentication -->
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
}

//templ makes it difficult to embed information within the javascript variable so we make use of html templating
func firebaseConfig() *template.Template {
  tmpl := template.New("firebaseConfig")

  tmpl.Funcs(template.FuncMap{
    "rawJS": func(s string) template.JS {
      return template.JS(s)
    },
  })

  _, err := tmpl.Parse("<script> var firebaseConfig = {{. | rawJS }} </script>")
  if err != nil {
    fmt.Println("error parsing firebaseConfig script", err)
  }

  return tmpl
}

templ FirebaseConfig() {
  @templ.FromGoHTML(firebaseConfig(), config.GetConfig().FirebaseConfigAsJsonString())
}

templ InitializeFirebaseApp() {
    <script>
    firebase.initializeApp(firebaseConfig);
    </script>
}

templ SignupFunction() {
    <script>
    function signUp() {
    var name = document.getElementById('signup-name').value;
    var email = document.getElementById('signup-email').value;
    var password = document.getElementById('signup-password').value;

    firebase.auth().createUserWithEmailAndPassword(email, password)
      .then((userCredential) => {
        // Signed up successfully
        var user = userCredential.user;
        user.updateProfile({
            displayName: name
        })
        console.log('User signed up: ', user);
        refreshAndVerifyToken()
        window.location.href = '/monitors';
      })
      .catch((error) => {
        var errorCode = error.code;
        var errorMessage = error.message;
        console.error('Error: ', errorCode, errorMessage);
      });
  }
  </script>
}

templ LoginFunction() {
    <script>
    function login() {
    var email = document.getElementById('login-email').value;
    var password = document.getElementById('login-password').value;

    firebase.auth().signInWithEmailAndPassword(email, password)
      .then((userCredential) => {
        // Logged in successfully
        var user = userCredential.user;
        console.log('User logged in: ', user);
        refreshAndVerifyToken()
        window.location.href = '/monitors';
      })
      .catch((error) => {
        var errorCode = error.code;
        var errorMessage = error.message;
        console.error('Error: ', errorCode, errorMessage);
      });
  }
  </script>
}

templ RefreshAndVerifyTokenFunction() {
  <script>
  function refreshAndVerifyToken() {
    firebase.auth().currentUser.getIdToken(true) // Force refresh
  .then((idToken) => {
    verifyToken(idToken);
  })
  .catch((error) => {
      var errorCode = error.code;
      var errorMessage = error.message;
      console.error('Error: ', errorCode, errorMessage);
  });
  } 
  </script>
}

templ VerifyTokenFunction() {
  <script>
  function verifyToken(idToken) {
    fetch('/verifylogin', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': idToken
        },
        body: JSON.stringify({ idToken: idToken })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        console.log('Success:', data);
    })
    .catch((error) => {
        console.error('Error:', error);
    });
  }
  </script>
}

templ RenewAuthToken() {
  @ImportFirebaseScripts()
  @InitializeFirebaseApp()
  <script>
  firebase.auth().currentUser.getIdToken(true) // Force refresh
  .then(function(idToken) {
    // Send token to your backend using an HTTPS request
    fetch('/updateauthcookie', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': idToken
        },
        body: JSON.stringify({ idToken: idToken })
    })
    .catch((error) => {
        console.error('Error:', error);
    });
  })
  .catch((error) => {
        console.error('Error:', error);
  });
  </script>
}